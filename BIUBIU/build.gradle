import com.android.builder.core.DefaultManifestParser

apply plugin: 'com.android.application'

dependencies {
    //只加入了jar包，需要在下面加入jniLibs.srcDirs = ['libs']来copy so 文件
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':refreshlibrary')
    compile project(':staggerlibrary')
    compile project(':multi-image-selector')
    compile project(':ShortcutBadger')
    compile project(':app')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'org.xutils:xutils:3.3.34'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'cn.bingoogolapple:bga-refreshlayout:1.1.5@aar'
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']//用于copy so 文件
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    dexOptions {
        incremental true
        preDexLibraries = false
        javaMaxHeapSize "2g"
    }

    defaultConfig {
        versionCode 20160625
        versionName "2.0.2"
        //Enabling multidex support.
        multiDexEnabled true
    }
    apply plugin: 'com.getkeepsafe.dexcount'

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    //打包命名相关
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            def today = new Date().format('MMdd')
            output.outputFile = new File(file.parent, file.name.replace(".apk", "-" + today + "-v" + readVersion() + ".apk"))
        }
    }

    signingConfigs {

        myConfig {
            storeFile file("biubiu.keystore")
            //storePassword System.console().readLine("\n\$ Enter keystore password: ")
            storePassword "meetu1992"
            keyAlias "biubiu"
            //keyPassword System.console().readLine("\n\$ Enter keyAlias password: ")
            keyPassword "meetu1992"
        }
    }

    buildTypes {

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 移除无用的resource文件
            shrinkResources true
            signingConfig signingConfigs.myConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }

        debug {
            signingConfig signingConfigs.myConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }


    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

/**
 * 从Manifest.xml中读取版本号
 **/
def readVersion() {
    def manifestParser = new DefaultManifestParser()
    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile);
}
